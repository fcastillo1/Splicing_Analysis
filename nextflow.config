cleanup = true

executor {
    name = 'local'
    cpus = 15  // Total de CPUs disponibles
    memory = '60 GB'  // Total de memoria disponible
    queueSize = 4  // Aumentado a 4 para permitir más procesos concurrentes
}

process {
    executor = 'local'

    withName: 'download_srr' {
        cpus = 2
        memory = '4 GB'
        maxForks = 4
    }

    withName: 'fastqc_raw' {
        cpus = 4
        memory = '8 GB'
        maxForks = 4
    }

    withName: 'trimmomatic' {
        cpus = 6
        memory = '8 GB'
        maxForks = 3
    }

    withName: 'fastqc_trimmed' {
        cpus = 4
        memory = '8 GB'
        maxForks = 4
    }

    withName: 'star' {
        cpus = 14
        memory = '45 GB'
        maxForks = 1
    }

    withName: 'SAMTOOLS_SORT_INDEX' {
        cpus = 6
        memory = '12 GB'
        maxForks = 2
    }

    withName: 'generate_bigwig' {
        cpus = 4
        memory = '8 GB'
        maxForks = 3
    }

    withName: 'stringtie' {
        cpus = 10
        memory = '20 GB'
        maxForks = 1
    }

    withName: 'prep_de' {
        cpus = 4
        memory = '8 GB'
        maxForks = 2
    }

    withName: 'stringtie_merge' {
        cpus = 10
        memory = '20 GB'
    }

    withName: 'RMATS_ORIGINAL_GTF' {
        cpus = 12
        memory = '24 GB'
        maxForks = 1
    }

    withName: 'RMATS_MERGED_GTF' {
        cpus = 12
        memory = '24 GB'
        maxForks = 1
    }

    withName: 'RMATS_SASHIMIPLOT' {
        cpus = 6
        memory = '12 GB'
        maxForks = 2
    }

    withName: 'SALMON_INDEX' {
        cpus = 10
        memory = '20 GB'
    }

    withName: 'SALMON_QUANT' {
        cpus = 10
        memory = '20 GB'
        maxForks = 1
    }

    withName: 'GFFREAD_TX2GENE' {
        cpus = 2
        memory = '4 GB'
        maxForks = 4
    }

    withName: 'TXIMPORT' {
        cpus = 6
        memory = '12 GB'
        maxForks = 2
    }

    withName: 'suppa2_generate_events' {
        cpus = 6
        memory = '12 GB'
        maxForks = 2
    }

    withName: 'suppa2_generate_isoforms' {
        cpus = 6
        memory = '12 GB'
        maxForks = 2
    }

    withName: 'suppa2_psi_per_event' {
        cpus = 4
        memory = '8 GB'
        maxForks = 3
    }

    withName: 'suppa_per_isoform' {
        cpus = 4
        memory = '8 GB'
        maxForks = 3
    }

    withName: 'split_psi_ioe' {
        cpus = 2
        memory = '4 GB'
        maxForks = 4
    }

    withName: 'split_psi_ioi' {
        cpus = 2
        memory = '4 GB'
        maxForks = 4
    }

    withName: 'split_tpm_file' {
        cpus = 2
        memory = '4 GB'
        maxForks = 4
    }

    withName: 'suppa_diffsplice_ioe' {
        cpus = 6
        memory = '12 GB'
        maxForks = 2
    }

    withName: 'suppa_diffsplice_ioi' {
        cpus = 6
        memory = '12 GB'
        maxForks = 2
    }

    withName: 'DESEQ2_DIFFERENTIAL' {
        cpus = 8
        memory = '16 GB'
        maxForks = 1
    }

    withName: 'GENERATE_INTERACTIVE_REPORT' {
        cpus = 2
        memory = '4 GB'
        maxForks = 4
    }

    withName: 'GSEA' {
        cpus = 8
        memory = '16 GB'
        maxForks = 1
    }

    withName: 'GPROFILER2_GOST' {
        cpus = 6
        memory = '12 GB'
        maxForks = 2
    }

    withName: 'GENERATE_BACKGROUND' {
        cpus = 2
        memory = '4 GB'
        maxForks = 4
    }

    withName: 'multiqc_run' {
        cpus = 2
        memory = '4 GB'
        maxForks = 4
    }
}
// Parámetros del pipeline
params {
    // Parámetros generales
    outdir = 'results' // Indica la ruta de salida 
    run_prefix = "output"
    samplesheet = null // Archivo con las muestras y sus rutas
    single_end = false // cambiar dependiendo del tipo de hebra
    stranded = 'unstranded' // cambiar dependiendo del tipo 
    readlength = 101 // Largo de la secuencia en este caso es 101
    //variable_read_length = true
    //alignment_mode = false

    // Control de flujo del pipeline
    full_pipeline = true // Con esta opcion se realiza todo el pipeline en simultaneo
    aligner_star = true // Con esta opción se realiza el proceso siguiendo la rama de STAR
    aligner_salmon = true // Con esta opción se realiza el proceso siguiendo la rama de Salmon
    run_suppa = true// Indica si se realiza el programa de suppa
    skip_multiqc = false // Se puede omitir el proceso de multiqc
    skip_sashimiplot = false // Se puede omitir el proceso del sashimiplot

    // Archivos de entrada y referencia
    genome_fasta = null // Ruta del genoma 
    transcript_fasta = null // Ruta del transcrito
    gtf = null // Ruta del archivo de anotación
    genomeDir = null // Dirección del Index de STAR (generado por el user)
    adapters = null // Dirección del adaptador
   // gene_list = null // Lista de genes para realizar el sashimiplot
    sashimi_group_file = null // Archivo de grouping
    //control_genes_file = null
    //transcript_lengths_file = null
    salmon_tximport_tsv = null // Dirección del archivo de salmon a utiizar para tximport

    // Parametros para STAR
    alignEndsType = 'Local'
    mismatch = 2
    overhang = 100 // 1- read lenght
    alignSJoverhangMin = 8
    alignSJDBoverhangMin = 3
    outFilterMultimapNmax = 20
    outFilterMismatchNmax = 5
    alignIntronMin = 45
    alignIntronMax = 1000000
    alignMatesGapMax = 1000000
    soft_clipping = true
    filterScore = 0.66
    sjdbOverhangMin = 3
    save_unmapped = false

    // Parametros para rMATS
    run_rmats = true
    mil = 50
    mel = 500
    novelSS = true
    statoff = false
    soft_clipping = false
    assembly_name = "hg38"
    variable_read_length = false  // Cambiar a true si es necesario
    allow_clipping = false  // Cambiar a true si es necesario
    bam1 = "home/francisca/BasalA_BasalB/bam1.txt" 
    bam2 = "home/francisca/BasalA_BasalB/bam2.txt" 

    sashimi_event_type = 'SE'  // o especifica los tipos de eventos, e.g., 'SE,RI'
    label1 = "basalA"
    label2 = "basalB"

    // Parametros para Salmon
    //salmon_index_k = 31
   // salmon_index_sparse = true
    salmon_additional_params = ''
    alignment_mode = false // Configura esto según tus necesidades
    lib_type = 'IU'

    // Parametros para DESeq2
    lfc_threshold = 1
    p_adjust_method = 'BH'
    shrink_lfc = true
    
    contrast_variable = 'condition'
    reference_level = 'basalA'
    target_level = 'basalB'
    //params.debug = false

    // Parametros para SUPPA GENERATE EVENTS
    events = 'SE SS MX RI FL'

    // Parametros para SUPPA DIFFSPLICING
    area = 1000
    lower_bound = 0.05 
    alpha = 0.05
    tpm_threshold = 0
    nan_threshold = 0

    // Parametros para SUPPA CLUSTERING
    sig_threshold = 0.05
    dpsi_threshold = 0.05
    eps = 0.05
    metric = 'euclidean'
    min_pts = 20
    groups = '1-9,10-17'
    clustering_method = 'DBSCAN'

    // Parámetros GSEA
    gsea_set_min = 10
    gsea_set_max = 1000
    gsea_collapse = false
    gsea_mode = 'Max_probe'
    gsea_create_svgs = true
    gsea_include_only_symbols = true
    gsea_make_sets = true
    gsea_plot_top_x = 20
    gsea_rnd_seed = 'timestamp'
    gsea_zip_report = false

    
    // Archivos GMT para GSEA
    gsea_gmt_symbols = [
        "/mnt/disco_2/FReyes/Datos/h.all.v2024.1.Hs.symbols.gmt",
        "/mnt/disco_2/FReyes/Datos/c2.all.v2024.1.Hs.symbols.gmt",
        "/mnt/disco_2/FReyes/Datos/c3.all.v2024.1.Hs.symbols.gmt",
        "/mnt/disco_2/FReyes/Datos/c5.all.v2024.1.Hs.symbols.gmt",
        "/mnt/disco_2/FReyes/Datos/c6.all.v2024.1.Hs.symbols.gmt",
        "/mnt/disco_2/FReyes/Datos/c8.all.v2024.1.Hs.symbols.gmt"
    ]

    chip_file = null  // Establece a null si no se usa, o proporciona una ruta si es necesario

    // GPROFILER
    gprofiler_organism = 'hsapiens'
    gprofiler_significance_threshold = 0.05
    gprofiler_correction_method = 'g_SCS'
    gprofiler_padj_threshold = 0.05
    gprofiler_lfc_threshold = 1
    gprofiler_sources = ['GO:BP', 'GO:MF', 'GO:CC', 'KEGG', 'REAC', 'TF', 'MIRNA', 'HPA', 'CORUM']

    // Otros parámetros
    bam_input = false
    bam_samplesheet = null
    sra_toolkit_path = "/usr/bin"

    // Mapa de tipos de biblioteca
    libTypeMap = [
        'first-strand': ['rmats': 'fr-firststrand', 'salmon': 'ISR'],
        'second-strand': ['rmats': 'fr-secondstrand', 'salmon': 'ISF'],
        'unstranded': ['rmats': 'fr-unstranded', 'salmon': 'IU'],
        'unknown': ['rmats': 'fr-unstranded', 'salmon': 'A']
    ]

}

// Configuración de reportes
report {
    enabled = true
    file = "${params.outdir}/pipeline_report.html"
    overwrite = true
}

timeline {
    enabled = true
    file = "${params.outdir}/timeline.html"
    overwrite = true
}

trace {
    enabled = true
    file = "${params.outdir}/pipeline_trace.txt"
     overwrite = true
}
